UPDATED nores,txt, starting from August 2019 when codes were reqritten

TODO:

Experiment with PZ fitter time range

For E_lamda, subtract total mean value of lamda before applying correction?
(like is done in PSAcal, between sp 1601 and 1401)

Library-PSA for detector IDs 30, 50 (have poor A/E selectivity)


[ ADD Gretina4A support to: compress*, decompress*, run_check, siginspect, prebuild ]
[ anl_firmware: crate 2 slot 6 -> detectors 29, 30, 34, [37], 44  (37 disabled) ]

drift-time cuts??
c2p1d4 (ch 32) PZ/DCR instability
10 Mz noise subtraction
burst cut

track down rundiff / rundiff2 bug in DS0

=====================================

How to handle chs with no pulser?
            - 42; 142, *138*
           ?- use calibration runs?
           ?- scale 138 LG slopes from HG?
           ?- why no pulsers in 138? 38 sees plenty. Is it just these runs?

dCoding:
get rid of oldTime in eventbuild.c?

        add a check on "expected pulser counts" based on duration of run
        investigate rate-oscillation runs
        improved way of finding narrowest peak in CTprocess/ep_finalize

        EnergyCal stability
        Veto logic
        LN-fill (20 mins) and noise-burst veto
        Reading stage 1 baselines, HV currents?
        General clean-up, e.g. too many little undocumented hacks

Tuning/results:
        Check/tune data cleaning cuts
              ?- does slope cut remove early low-ampl pulses due to walk?
              ?- increase margin of error for baseline, rms, slope, pulser-tag energy?

Some files to process:

   - DS0/DS1 without trigger card???  Try prebuilding?
             2016-1-20-P3KJR_Run9768  - Ge delta-time = 6440 s
             2016-2-7-P3KJR_Run10329  - More than 200 sub-events in built event!
             2016-3-14-P3KJR_Run11944 - both polarities? Multiple pulser peaks
             
-------------------------------------------------------------------

Some thoughts about the DCR cut
===============================

- The Signal acceptance  of the DCR cut should be evaluated with the DE peak, not continuum or FE peak
- Need pileup rejection of calib signals to evaluate acceptance?
- Need to cut on baseline value and slope of calib signals to evaluate acceptance?
- Does calib signal acceptance overlap with Li signal degradation / bb peak acceptance?
- Using presummed (longer) signals gives some increase in DCR sensitivity, probably 20% - 40% or so
- The delayed charge appears to continue for ~25 us in at least some cases. Need to check that for more detectors...
- Should be able to extract rough radius from drift time, comparing e.g. t(1-70%) expt vs sim
- Temperature-dependence of DCR release time?

-------------------------------------------------------------------

head -1 *.lis | grep ds5 > ptag.sh
sed "s\ds5\pulser_tag_init ds5\g" ptag.sh > j; mv j ptag.sh
emacs -> add text:
  pulser_tag_init ds5/2016-11-10-P3LQK_Run19502 | tee out/ptag19502.txt


qsub -IV
qsub <command>
qstat
showq


    p3kjr 2015.12.24 -
DS3 p3kjr 2016.09.09 - 2016.10.10
DS4 p3lqg 2016.09.09 - 2016.10.10
    p3lqh 2016.10.12 - 2016.10.13
    p3lqj 2016.10.12 - 2016.10.13
DS5 p3lqk 2016.10.13 -

===============================================
git:

instead of "svn co" do
git clone https://github.com/mppmu/GAT.git

instead of "svn update" do
git pull   (do this before a push?)

instead of "svn commit" do
git commit [files]
git push

also
git add <filename>
If you want to set the editor only for Git, do either (you donâ€™t need both):

Set core.editor in your Git config: git config --global core.editor "emacs"
Set the GIT_EDITOR environment variable: export GIT_EDITOR=emacs

===============================================

library PSA:
            DEP       SEP        FEP    Continuum
    A/E   6762(89)    730(52)   7939(89)   41484    sp 3
A/E-PSA   6659(88)    659(50)   6808(83)            sp 3 - 9
   Diff    103         71       1131        2215    sp 9
      %    1.5        9.7       14.2         5.3
PSA   6791(89)    805(53)   8214(91)   42638    sp 10



===============================================
Notes on autopeak/autopeak/autopeak3/autopeak4 in ep_util.c
-----------------------------------------------------------

autopeak, autopeak1 use find_cent() -> integrate over +- 2.5 fwhm ~ 5.9 sigma
 - find_cent() also uses float integration limits, more precise for centroid

autopeak3, autopeak 4 use autopeak3a() -> integrates over +- 1.3 FWHM ~ 3 sigma
 - autopeak4 then uses a final integration over arbitrary +- factor*FWHM
 - but autopeak3a can fail sometimes
    - if we have a double peak? if the peak s too close to search range lo or hi?


Uses in PZcal:
tau centroid
    if ((pos = autopeak4(his[chan], 2010, 3500, 1.0f, &area, &fwhm)) && area > 100)
frac2 centroid
    if ((pos = autopeak4(his[chan], 4000, 4500, 1.0f, &area, &fwhm)) && area > 100)

Uses in CTcal.c:
step 1, raw E gain
          if ((pos = autopeak3(his[i], j, 7000, &area, &fwhm))) {
step 2, find narrowest DTC/lamda-corr peak
          if ((pos = autopeak3(his[spnum+chan], 200*j, 200+200*j, &area, &fwhm)) &&
step 3, final E gains
          if ((pos = autopeak3(his[600+chan], j, 7000, &area, &fwhm))) {
          if ((pos = autopeak3(his[800+chan], j, 7000, &area, &fwhm))) {

Uses in PSAcal:
step 2, find optimum DTC for DCR, lamda
          if ((pos = autopeak3(his[1000 + 200*dcr_or_lamda + chan], 200*j, 200+200*j, &area, &fwhm)) &&
step 6, find optimum DTC for LQ
          if ((pos = autopeak4(his[1400 + chan], 200*j, 200+200*j, 1.0, &area, &fwhm)) &&
step 3, cut values for DCR, lamda -- CHECK second call
          pos = autopeak3(his[1600 + chan], 400+1000*j, 700+1000*j, &area, &fwhm) - 500.0 - 1000.0*j;
          pos = autopeak3(his[1600 + chan], 1400+1000*j, 1700+1000*j, &area, &fwhm) - 1500.0 - 1000.0*j;
          pos = autopeak3(his[1600 + chan], 6400, 6700, &area, &fwhm) - 6500.0;
