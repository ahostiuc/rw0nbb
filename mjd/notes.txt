UPDATED notes.txt, starting from August 2019 when codes were rewritten

TODO:

Library-PSA for detector IDs 30, 50 (have poor A/E selectivity)

Experiment with PZ fitter time range?

For E_lamda, subtract total mean value of lamda before applying correction?
(like is done in PSAcal, between sp 1601 and 1401)

[ ADD Gretina4A support to: compress*, decompress*, run_check, siginspect, prebuild ]
[ anl_firmware: crate 2 slot 6 -> detectors 29, 30, 34, [37], 44  (37 disabled) ]

drift-time cuts?
10 Mz noise subtraction?
burst cut
track down rundiff / rundiff2 bug in DS0

Use mean E DTC/lamda factors, most common DT/Lamda correction option?
Keep LQ DTC factor for PSAcal -a option?

[DONE: PZcal: Skip fraction of events for long calib subsets]

=====================================

Coding:
        add a check on "expected pulser counts" based on duration of run
        investigate rate-oscillation runs
        improved FWHM & pos determination for 2614-keV peaks?
        Veto logic
        LN-fill (20 mins) and noise-burst veto?
        Reading stage 1 baselines, HV currents?

Tuning/results:
        Check/tune data cleaning cuts
              - does slope cut remove early low-ampl pulses due to walk?

Some files to process:
   - DS0/DS1 without trigger card???  Try prebuilding?
             2016-1-20-P3KJR_Run9768  - Ge delta-time = 6440 s
             2016-2-7-P3KJR_Run10329  - More than 200 sub-events in built event!
             2016-3-14-P3KJR_Run11944 - both polarities? Multiple pulser peaks
             
-------------------------------------------------------------------

Some thoughts about the DCR cut
===============================

- The Signal acceptance  of the DCR cut should be evaluated with the DE peak, not continuum or FE peak
- Need pileup rejection of calib signals to properly evaluate acceptance
- Need to cut on baseline value and slope of calib signals to properly evaluate acceptance
      - but with the high DCR cut used, both of the acceptance issues above are negligible?
- Does calib signal acceptance overlap with Li signal degradation / bb peak acceptance?
- Using presummed (longer) signals gives some increase in DCR sensitivity, probably 20% - 40% or so
- The delayed charge appears to continue for ~25 us in at least some cases. Need to check that for more detectors...
- Should be able to extract rough radius from drift time, comparing expt vs sim
- Temperature-dependence of DCR release time? (seems to be very small; due to diffusion?)

-------------------------------------------------------------------

To prepare a script for running pulser_tag_init:
head -1 *.lis | grep ds5 > ptag.sh
sed "s\ds5\pulser_tag_init ds5\g" ptag.sh > j; mv j ptag.sh
emacs -> add text:
  pulser_tag_init ds5/2016-11-10-P3LQK_Run19502 | tee out/ptag19502.txt

ORNL cluster queue commands:
qsub -IV
qsub <command>
qstat
showq
qdel

    p3kjr 2015.12.24 -
DS3 p3kjr 2016.09.09 - 2016.10.10
DS4 p3lqg 2016.09.09 - 2016.10.10
    p3lqh 2016.10.12 - 2016.10.13
    p3lqj 2016.10.12 - 2016.10.13
DS5 p3lqk 2016.10.13 -

===============================================

library PSA:
            DEP       SEP        FEP    Continuum
    A/E   6762(89)    730(52)   7939(89)   41484    sp 3
A/E-PSA   6659(88)    659(50)   6808(83)            sp 3 - 9
   Diff    103         71       1131        2215    sp 9
      %    1.5        9.7       14.2         5.3
    PSA   6791(89)    805(53)   8214(91)   42638    sp 10



===============================================

Notes on autopeak/autopeak/autopeak3/autopeak4 in ep_util.c
-----------------------------------------------------------

autopeak, autopeak1 use find_cent() -> integrate over +- 2.5 fwhm ~ 5.9 sigma
 - find_cent() also uses float integration limits, more precise for centroid

autopeak3, autopeak 4 use autopeak3a() -> integrates over +- 1.3 FWHM ~ 3 sigma
 - autopeak4 then uses a final integration over arbitrary +- factor*FWHM
 - but autopeak3a can fail sometimes
    - if we have a double peak? if the peak s too close to search range lo or hi?


Uses in PZcal:
tau centroid
    if ((pos = autopeak4(his[chan], 2010, 3500, 1.0f, &area, &fwhm)) && area > 100)
frac2 centroid
    if ((pos = autopeak4(his[chan], 4000, 4500, 1.0f, &area, &fwhm)) && area > 100)

Uses in CTcal.c:
step 1, raw E gain
          if ((pos = autopeak3(his[i], j, 7000, &area, &fwhm))) {
step 2, find narrowest DTC/lamda-corr peak
          if ((pos = autopeak3(his[spnum+chan], 200*j, 200+200*j, &area, &fwhm)) &&
step 3, final E gains
          if ((pos = autopeak3(his[600+chan], j, 7000, &area, &fwhm))) {
          if ((pos = autopeak3(his[800+chan], j, 7000, &area, &fwhm))) {

Uses in PSAcal:
step 2, find optimum DTC for DCR, lamda
          if ((pos = autopeak3(his[1000 + 200*dcr_or_lamda + chan], 200*j, 200+200*j, &area, &fwhm)) &&
step 6, find optimum DTC for LQ
          if ((pos = autopeak4(his[1400 + chan], 200*j, 200+200*j, 1.0, &area, &fwhm)) &&
step 3, cut values for DCR, lamda -- CHECK second call
          pos = autopeak3(his[1600 + chan], 400+1000*j, 700+1000*j, &area, &fwhm) - 500.0 - 1000.0*j;
          pos = autopeak3(his[1600 + chan], 1400+1000*j, 1700+1000*j, &area, &fwhm) - 1500.0 - 1000.0*j;
          pos = autopeak3(his[1600 + chan], 6400, 6700, &area, &fwhm) - 6500.0;


----------------------------------------------------- 2020-Dec
Added several codes and modified analysis process
-------------------------------------------------
Added/modified codes:
- Fixed bug in autopeak3 that would sometimes find peaks outside the initial range of bins
    - was affecting DCR, landa, and LQ
- To choose mean PZ and gain params, and best DCR, lamda, LQ cuts, and do time-linear
     interpolation of A/E cuts for bb runs between calibrations: interpolateCal
     - also produces veto_only_runs.txt for channel selection of those bb runs
- To list runs in a presorted DS* file: get_run_nums (from get_run_nums_times.c)
  - can be used to make a good_runs.input file to split data subsets
    presort -g good_runs.input DSxxxxx
- To evaluate exposure: interpolateCal (produces veto_only_runs.txt, used by check_veto_only and by get_exposure)
                        count_dc       (for estimating data-cleaning acceptance efficiency, used on bb runs)
                        get_exposure   (from get_run_nums_times.c)
- To merge all calibration skim.dat files from a dataset:   merge_skim
- To investigate stability correlations for detectors with working pulsers: pulser_stab

Changed process:
- Instead of just using long calibrations to define A/E_(pos-cut) values, use merge_skim
    to make a merged skim file from the whole data set, and run PSAcal on that
    then copy results to indiidual calib subsets and run PSAcal -a skim.dat on them
- Use INL_DCR_input.sec from merged skim analysis in all calib and bb subsets
- Use interpolateCal to propagate best CTCcal/PSAcal params and cuts to intermediate bb runs
    and to do channel selection on final event lists
    and to use a common DTC factor for A/E and LQ, and a common E correction factor for A/E

----------------------------------------------------- 2021-Jan-05

Added CTcal2.c:
- QUADRATIC fit to E_raw vs. drift time -> E_qdtc  <- always at least as good as the linear E_ctc in CTcal.c
- also quadratic fit to E_raw vs. lamda but this makes no improvement
- option to take mean of E_qdtc and E_lamda; often better than either energy value by itself!

Modest improvement in summed spectra (fits using 0.5 keV/bin, so some extra width)
For enriched detectors in ds6a/cal/ds37004L:
FWHM 2.58 -> 2.51   FWTM 4.79 -> 4.65
For all detectors in ds6a/cal/ds37004L:
FWHM 2.55 -> 2.48   FWTM 4.72 -> 4.59

Bigger improvement for two ICPC detectors in ds8/cal/ds67202L (again fits using 0.5 keV/bin)
ID 43  FWHM 2.73 -> 2.48    FWTM 5.22 -> 4.74  -0.25
ID 43  FWHM 2.63 -> 2.63    FWTM 5.13 -> 5.13 unchanged
ID 43  FWHM 2.63 -> 2.41    FWTM 4.97 -> 4.54  -0.22
ID 47  FWHM 2.77 -> 2.77    FWTM 5.66 -> 5.66 unchanged

Could make further improvements by setting a threshold on drift time,
  above which we correct only using lamda?

2021-01-10: Tried doing linear fit to match DCR to lamda, then taking the *mean* of dcr' and lamda to use for e_lamda
            - very marginal improvement in some detectors, overall slightly worse performance
            - commented out that code in CTcal2.c
